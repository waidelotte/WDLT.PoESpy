<mah:MetroWindow x:Class="WDLT.PoESpy.Views.ShellView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:s="https://github.com/canton7/Stylet"
                 mc:Ignorable="d"
                 MinHeight="200"
                 MinWidth="300"
                 SaveWindowPosition="True"
                 ShowIconOnTitleBar="True"
                 Icon="pack://application:,,,/Resources/ico.ico"
                 IconBitmapScalingMode="HighQuality"
                 ShowSystemMenuOnRightClick="False"
                 NonActiveWindowTitleBrush="{DynamicResource PrimaryHueDarkBrush}"
                 NonActiveBorderBrush="{DynamicResource PrimaryHueMidBrush}"
                 RightWindowCommandsOverlayBehavior="Never"
                 Height="{Binding Source={x:Static properties:Settings.Default}, Path=AppWindowHeight, Mode=TwoWay}"
                 Width="{Binding Source={x:Static properties:Settings.Default}, Path=AppWindowWidth, Mode=TwoWay}"
                 ResizeMode="CanResize"
                 x:Name="ShellWindow"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:viewModels="clr-namespace:WDLT.PoESpy.ViewModels"
                 xmlns:properties="clr-namespace:WDLT.PoESpy.Properties"
                 d:DataContext="{d:DesignInstance viewModels:ShellViewModel}">
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowLastSeparator="True">
            <Button ToolTip="Open Trade" Command="{s:Action OpenTrade}">
                <materialDesign:PackIcon Kind="OpenInBrowser" />
            </Button>
            <Button ToolTip="Screenshot" Command="{s:Action Screenshot}" CommandParameter="{Binding ElementName=ShellWindow}">
                <materialDesign:PackIcon Kind="PhotoCamera" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <materialDesign:DialogHost OpenDialogCommandDataContextSource="DialogHostInstance" CloseOnClickAway="True" CloseOnClickAwayParameter="{x:Null}" SnackbarMessageQueue="{Binding ElementName=TimedSnackbar, Path=MessageQueue}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsInitDone, Converter={StaticResource InverseBoolToVisConverter}}">
                <ProgressBar
                    Style="{StaticResource MaterialDesignCircularProgressBar}"
                    Height="100"
                    Width="100"
                    Value="0"
                    IsIndeterminate="True" />
                <TextBlock Width="250" Visibility="{Binding InitText, Converter={StaticResource StringToVisibilityConverter}}" TextTrimming="CharacterEllipsis"  Text="{Binding InitText, StringFormat={}Loading: {0}}" Margin="0 10 0 0" Foreground="{DynamicResource PrimaryHueMidBrush}" FontSize="13" FontWeight="SemiBold"/>
            </StackPanel>
            <Grid IsEnabled="{Binding IsInitDone}" Grid.Row="0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Opacity" Value="1"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsInitDone}" Value="False">
                                <Setter Property="Opacity" Value="0.3"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <mah:MetroTabControl ItemsSource="{Binding Items}" SelectedItem="{Binding ActiveItem}" DisplayMemberPath="DisplayName" mah:HeaderedControlHelper.HeaderFontSize="14" mah:TabControlHelper.Underlined="TabPanel" >
                    <mah:MetroTabControl.Resources>
                        <Style TargetType="{x:Type mah:MetroTabItem}" d:DataContext="{d:DesignInstance viewModels:BaseTabViewModel}">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Opacity" Value="1"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                    <Setter Property="Opacity" Value="0.35"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </mah:MetroTabControl.Resources>
                    <mah:MetroTabControl.ContentTemplate>
                        <DataTemplate>
                            <Border BorderThickness="0 5 0 0" BorderBrush="{DynamicResource PrimaryHueMidBrush}">
                                <ContentControl s:View.Model="{Binding}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False"/>
                            </Border>
                        </DataTemplate>
                    </mah:MetroTabControl.ContentTemplate>
                </mah:MetroTabControl>
            </Grid>
            <ItemsControl ItemsSource="{Binding RateLimits}" VerticalAlignment="Bottom" Grid.Row="1">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <ProgressBar Value="{Binding RemainingPercent, Mode=OneWay}" Height="15"/>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Height="15" Margin="5 0">
                                <TextBlock Text="{Binding Endpoint}" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" Margin="0 0 3 0"/>
                                <TextBlock Text="{Binding Remaining,StringFormat={}({0}s.)}" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <materialDesign:Snackbar x:Name="TimedSnackbar"
                                     Grid.Row="0"
                                     HorizontalContentAlignment="Stretch"
                                     HorizontalAlignment="Center"
                                     MessageQueue="{Binding SnackbarMessageQueue}"
                                     Background="{DynamicResource PrimaryHueLightBrush}"
                                     Foreground="{DynamicResource PrimaryHueLightForegroundBrush}">
                <materialDesign:Snackbar.Resources>
                    <Style TargetType="materialDesign:SnackbarMessage">
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </materialDesign:Snackbar.Resources>
            </materialDesign:Snackbar>
        </Grid>
    </materialDesign:DialogHost>
</mah:MetroWindow>
