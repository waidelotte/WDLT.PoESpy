<UserControl x:Class="WDLT.PoESpy.Views.InspectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModels="clr-namespace:WDLT.PoESpy.ViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="https://github.com/canton7/Stylet"
             d:DataContext="{d:DesignInstance viewModels:InspectViewModel}"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ProgressBar
            Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
            Margin="0 -5 0 0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Grid.Row="0"
            IsIndeterminate="True" />
        <Grid Grid.Row="0" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox
                Padding="5"
                Grid.Column="0"
                Text="{Binding AccountName, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Account"
                Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
            <ComboBox ItemsSource="{Binding Leagues, Mode=OneWay}"
                      Grid.Column="1"
                      VerticalContentAlignment="Bottom"
                      VerticalAlignment="Stretch"
                      materialDesign:HintAssist.Hint="League"
                      materialDesign:HintAssist.HintOpacity=".25"
                      SelectedValue="{Binding SelectedLeague}"
                      SelectedValuePath="Text"
                      DisplayMemberPath="Text" />
            <Button
                Grid.Column="2"
                Height="Auto"
                IsDefault="True"
                BorderThickness="0 0 0 1"
                ToolTip="Search"
                BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                Style="{StaticResource MaterialDesignFlatButton}"
                Command="{s:Action Inspect}">
                <materialDesign:PackIcon Kind="AccountSearch" />
            </Button>
        </Grid>
        <Grid Grid.Row="1">
            <DataGrid
                ItemsSource="{Binding Characters}"
                SelectionMode="Single"
                SelectionUnit="Cell"
                Visibility="{Binding Characters.Count, Converter={StaticResource NotZeroToVisibilityConverter}}"
                IsReadOnly="True"
                HeadersVisibility="Column"
                AutoGenerateColumns="False"
                CanUserReorderColumns="False"
                materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2">
                <DataGrid.Resources>
                    <Style x:Key="CenterCell" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="TextAlignment" Value="Center" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Binding="{Binding League}"
                        Header="League"
                        Width="Auto">
                    </DataGridTextColumn>
                    <DataGridTextColumn
                        Binding="{Binding Name}"
                        Header="Name"
                        Width="Auto"/>
                    <DataGridTextColumn
                        Binding="{Binding Class}"
                        Header="Class"
                        Width="Auto"/>
                    <DataGridTextColumn
                        Binding="{Binding Level}"
                        Header="Level"
                        ElementStyle="{StaticResource CenterCell}"
                        Width="Auto"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource MaterialDesignOutlinedButton}"
                    Grid.Column="0"
                    materialDesign:ButtonAssist.CornerRadius="0"
                    BorderThickness="0 1 1 0"
                    Content="Profile"
                    Command="{s:Action OpenProfile}"/>
            <Button Style="{StaticResource MaterialDesignOutlinedButton}"
                    Grid.Column="1"
                    materialDesign:ButtonAssist.CornerRadius="0"
                    BorderThickness="0 1 0 0"
                    Command="{s:Action OpenTrade}">
                <TextBlock Text="{Binding TradeResult.Total, StringFormat={}Items on Trade: {0}, FallbackValue=Items on Trade}"/>
            </Button>
        </Grid>
    </Grid>
</UserControl>
